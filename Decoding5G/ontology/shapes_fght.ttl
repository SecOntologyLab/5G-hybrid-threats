# Section 1: Namespaces and Imports
@prefix fght: <https://purl.org/5g-hybrid-threats#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .


# Section 7: SHACL Shapes

# Direct Threat Shape
fght:DirectThreatShape a sh:NodeShape ;
    sh:targetClass fght:NetworkManipulation ;
    sh:property [ 
        sh:path fght:NefariousActivityName ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "Direct threat activity must have a name."
    ] .

fght:5GInitialAccessShape a sh:NodeShape ;
    sh:targetClass fght:5GInitialAccess ;
    sh:property [
        sh:path fght:NefariousActivityName ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "5GInitialAccess activities must have a name."
    ] ;
    sh:property [
        sh:path fght:techniquesUsed ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "Techniques used in 5GInitialAccess must be specified."
    ] .

# Combined Malware Shape
fght:MalwareShape a sh:NodeShape ;
    sh:targetClass fght:Malware ;
    sh:property [
        sh:path fght:MalwareName ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "Malware must have a name."
    ] ;
    sh:property [
        sh:path fght:usedBy ;
        sh:class fght:ThreatActor ;
        sh:message "Each Malware instance must be used by at least one ThreatActor." ;
        sh:minCount 1
    ] .

# Ransomware Shape
fght:RansomwareShape a sh:NodeShape ;
    sh:targetClass fght:Ransomware ;
    sh:property [ 
        sh:path fght:MalwareName ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "Ransomware must have a name."
    ] .

# Shape for APT29 Activity
fght:APT29ActivityShape a sh:NodeShape ;
    sh:targetClass fght:APT29Activity ;
    sh:property [
        sh:path fght:location ;
        sh:minCount 1 ;
        sh:message "Every APT29Activity must have a location."
    ] ;
    sh:property [
        sh:path fght:targets ;
        sh:minCount 1 ;
        sh:message "Activity should have at least one target."
    ] ;
    sh:property [
        sh:path fght:techniquesUsed ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "Techniques used should be specified."
    ] ;
    sh:property [
        sh:path fght:year ;
        sh:datatype xsd:gYear ;
        sh:minCount 1 ;
        sh:message "Year of activity occurrence should be specified."
    ] .


# SHACL shape for usedBy
fght:AttackPatternShape a sh:NodeShape ;
    sh:targetClass fght:AttackPattern ;
    sh:property [
        sh:path fght:usedBy ;
        sh:class fght:Campaign ;
        sh:minCount 0 ; # An attack pattern may or may not be used by a campaign
        sh:message "An AttackPattern may be used by a Campaign." ;
    ] .

fght:ThreatActorShape a sh:NodeShape ;
    sh:targetClass fght:ThreatActor ;
    sh:property [
        sh:path fght:attributedTo ;
        sh:class fght:Campaign ;
        sh:message "A ThreatActor should be linked to at least one Campaign." ;
        sh:minCount 1
    ] .

fght:TargetShape a sh:NodeShape ;
    sh:targetClass fght:Target ;
    sh:or (
        [ sh:class fght:NetworkTarget ]
        [ sh:class fght:SystemTarget ]
        [ sh:class fght:OrganizationalTarget ]
        [ sh:class fght:Vulnerability ]
    ) ;
    sh:message "Each Target must belong to a specific subclass." .

fght:CampaignAccountsShape a sh:NodeShape ;
    sh:targetClass fght:CampaignAccounts ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .


fght:VulnerabilityShape a sh:NodeShape ;
    sh:targetClass fght:Vulnerability ;  # Targets instances of fght:Vulnerability
    sh:property [
        sh:path fght:alignedWithStandard ;
        sh:datatype xsd:string ;  # Expecting a string value
    ] ;
    sh:property [
        sh:path fght:sensitivity ;
        sh:datatype xsd:string ;  # Expecting a string value
    ] .

fght:CampaignShape a sh:NodeShape ;
    sh:targetClass fght:Campaign ;
    sh:property [
      # a sh:PropertyShape ;
       sh:path fght:targets ;
       sh:class fght:Vulnerability ;
       sh:message "A Campaign must target at least one Vulnerability." ;
       sh:minCount 1 ;
    #    sh:severity sh:Violation
    ] .

# Shape for ElectionInfrastructure
fght:ElectionInfrastructureShape a sh:NodeShape ;
    sh:targetClass fght:ElectionInfrastructure ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .

# Shape for RiskLevel
fght:RiskLevelShape a sh:NodeShape ;
    sh:targetClass fght:RiskLevel ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .


# Shape for 5GAmplificationMechanism
fght:5GAmplificationMechanismShape a sh:NodeShape ;
    sh:targetClass fght:5GAmplificationMechanism ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path fght:hasRiskLevel ;
        sh:class fght:RiskLevel ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Combined Shape for Disinformation
fght:DisinformationShape a sh:NodeShape ;
    sh:targetClass fght:Disinformation ;
    sh:property [
        sh:path fght:propagationChannel ;
        sh:class fght:NetworkTarget ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path fght:amplificationMethod ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path fght:usesAmplificationMechanism ;
        sh:class fght:5GAmplificationMechanism ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path fght:hasRiskLevel ;
        sh:class fght:RiskLevel ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Shapes for specific mechanism instances
fght:NetworkSlicingShape a sh:NodeShape ;
    sh:targetClass fght:NetworkSlicing ;
    sh:property [
        sh:path fght:targetsRegion ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .

fght:EdgeComputingShape a sh:NodeShape ;
    sh:targetClass fght:EdgeComputing ;
    sh:property [
        sh:path fght:localityFocus ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .

fght:EnhancedMobileBroadbandShape a sh:NodeShape ;
    sh:targetClass fght:EnhancedMobileBroadband ;
    sh:property [
        sh:path fght:contentType ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .

fght:UltraReliableLowLatencyShape a sh:NodeShape ;
    sh:targetClass fght:UltraReliableLowLatency ;
    sh:property [
        sh:path fght:adjustmentType ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .
#                                                          ***
#                                                       Jan 21 additions

# Shape for ThreatConcept validation
fght:ThreatConceptValidationShape
    a sh:NodeShape ;
    sh:targetClass fght:ThreatConcept ;
    sh:property [
        sh:path fght:hasRiskLikelihood ;
        sh:class fght:LikelihoodLevel ;
        sh:maxCount 1 ;  # Functional property constraint
    ] ;
    sh:property [
        sh:path fght:hasRiskSeverity ;
        sh:class fght:SeverityLevel ;
        sh:maxCount 1 ;  # Functional property constraint
    ] .

# Value constraint shapes
fght:LikelihoodLevelShape
    a sh:NodeShape ;
    sh:targetClass fght:LikelihoodLevel ;
    sh:in ( fght:HighLikelihood fght:MediumLikelihood fght:LowLikelihood ) .

fght:SeverityLevelShape
    a sh:NodeShape ;
    sh:targetClass fght:SeverityLevel ;
    sh:in ( fght:HighSeverity fght:MediumSeverity fght:LowSeverity ) .

# is a Part of construction
fght:DocumentSectionShape 
    a sh:NodeShape ;
    sh:targetClass fght:DocumentSection ;
    sh:property [
        sh:path fght:subPartOf ;
        sh:class fght:DocumentSection ;
    ] .

# Document and Collection Shapes
fght:DocumentShape
    a sh:NodeShape ;
    sh:targetClass fght:Document ;
    sh:property [
        sh:path fght:partOfGroup ;
        sh:class fght:DocumentCollection ;
        sh:minCount 1 ;  # Each document must belong to at least one collection
    ] .

fght:DocumentCollectionShape
    a sh:NodeShape ;
    sh:targetClass fght:DocumentCollection ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;  # Each collection must have a label
    ] .

# Shape to ensure proper partOfGroup relationships
fght:PartOfGroupShape
    a sh:NodeShape ;
    sh:targetClass fght:Document ;
    sh:property [
        sh:path fght:partOfGroup ;
        sh:nodeKind sh:IRI ;  # Must be an IRI, not a literal
        sh:class fght:DocumentCollection ;
    ] .


